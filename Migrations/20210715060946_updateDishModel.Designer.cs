// <auto-generated />
using System;
using BryantCornerCafe.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BryantCornerCafe.Migrations
{
    [DbContext(typeof(BryantCornerCafeContext))]
    [Migration("20210715060946_updateDishModel")]
    partial class updateDishModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("BryantCornerCafe.Models.CSubRel", b =>
                {
                    b.Property<int>("CSubRelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("CSubRelId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("CSubRels");
                });

            modelBuilder.Entity("BryantCornerCafe.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BryantCornerCafe.Models.Dish", b =>
                {
                    b.Property<int>("DishId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ChefId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<float>("Price")
                        .HasColumnType("float");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("DishId");

                    b.HasIndex("ChefId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Dishes");
                });

            modelBuilder.Entity("BryantCornerCafe.Models.SubCategory", b =>
                {
                    b.Property<int>("SubCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Info")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("ParentCatCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("SubCategoryId");

                    b.HasIndex("ParentCatCategoryId");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("BryantCornerCafe.Models.SubDRel", b =>
                {
                    b.Property<int>("SubDRelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DishId")
                        .HasColumnType("int");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("SubDRelId");

                    b.HasIndex("DishId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("SubDRels");
                });

            modelBuilder.Entity("BryantCornerCafe.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BryantCornerCafe.Models.CSubRel", b =>
                {
                    b.HasOne("BryantCornerCafe.Models.Category", "ParentCat")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BryantCornerCafe.Models.SubCategory", "MySubCat")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MySubCat");

                    b.Navigation("ParentCat");
                });

            modelBuilder.Entity("BryantCornerCafe.Models.Dish", b =>
                {
                    b.HasOne("BryantCornerCafe.Models.User", "Chef")
                        .WithMany("MyDishes")
                        .HasForeignKey("ChefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BryantCornerCafe.Models.SubCategory", "ParentSubCat")
                        .WithMany("MyDishes")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chef");

                    b.Navigation("ParentSubCat");
                });

            modelBuilder.Entity("BryantCornerCafe.Models.SubCategory", b =>
                {
                    b.HasOne("BryantCornerCafe.Models.Category", "ParentCat")
                        .WithMany("MySubCats")
                        .HasForeignKey("ParentCatCategoryId");

                    b.Navigation("ParentCat");
                });

            modelBuilder.Entity("BryantCornerCafe.Models.SubDRel", b =>
                {
                    b.HasOne("BryantCornerCafe.Models.Dish", "MyDish")
                        .WithMany()
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BryantCornerCafe.Models.SubCategory", "ParentSubCat")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MyDish");

                    b.Navigation("ParentSubCat");
                });

            modelBuilder.Entity("BryantCornerCafe.Models.Category", b =>
                {
                    b.Navigation("MySubCats");
                });

            modelBuilder.Entity("BryantCornerCafe.Models.SubCategory", b =>
                {
                    b.Navigation("MyDishes");
                });

            modelBuilder.Entity("BryantCornerCafe.Models.User", b =>
                {
                    b.Navigation("MyDishes");
                });
#pragma warning restore 612, 618
        }
    }
}
